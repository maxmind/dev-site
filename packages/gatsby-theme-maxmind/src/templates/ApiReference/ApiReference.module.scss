@use '../styles/variables';

:root {
  --heading-height: 50px;
}

.schema {
  width: 100%;
}

.heading {
  background: #f6f7f7;
  border: 1px solid darken(rgba(60, 88, 99, 0.1), 0);
  border-radius: var(--mm-border-radius) var(--mm-border-radius) 0 0;
  height: var(--heading-height);
  line-height: var(--heading-height);
  margin: var(--mm-spacing) var(--mm-spacing) 0;
  padding: 0 var(--mm-spacing) / 2;
  position: sticky;
  scroll-margin-top: var(--page-header-height) + var(--mm-spacing);
  top: calc(var(--page-header-height) + var(--mm-spacing));
  transform-style: preserve-3d;
  z-index: 5;

  &::after {
    background: var(--mm-color-background);
    content: ' ';
    display: block;
    height: calc(100% + var(--mm-spacing) + 2px);
    left: calc(var(--mm-spacing) * -1 - 1px);
    position: absolute;
    top: calc(var(--mm-spacing) * -1 - 1px);
    transform: translateZ(-1px);
    width: calc(100% + var(--mm-spacing) * 2 + 2px);
  }
}

.toggle-example {
  background: lighten(#3b446f, 20);
  border: 0;
  border-radius: var(--mm-border-radius);
  box-shadow: 0 6px 0 rgba(0, 0, 0, 0.1);
  color: rgba(255, 255, 255, 0.9);
  cursor: pointer;
  display: inline-block;
  font-size: 14px;
  font-weight: 500;
  height: 50px;
  left: 50%;
  letter-spacing: 1px;
  line-height: 50px;
  margin-top: var(--mm-spacing);
  padding: 0 !important;
  padding-left: calc(var(--mm-spacing) / 2 + 50px) !important;
  padding-right: var(--mm-spacing) / 2 !important;
  position: relative;
  text-shadow: 0 2px 0 rgba(0, 0, 0, 0.2);
  transform: translateX(-50%);
  vertical-align: middle;
  @include variables.pattern;

  &::before {
    border-radius: var(--mm-border-radius);
    z-index: -1;
  }
}

.toggle-example-btn-icon {
  border-right: 2px solid #eee;
  height: 100%;
  left: 0;
  line-height: 55px;
  position: absolute;
  text-align: center;
  top: 0;
  width: 50px;
}

.toggle-example-btn--is-expanded .toggle-example-btn-icon svg {
  transform: rotate(180deg);
}

.heading-link {
  color: #666;
  font-size: 16px;
  font-weight: bold;
  text-decoration: none;
  width: 100%;
}

.heading-type {
  margin-left: var(--mm-spacing) / 4;
  vertical-align: middle;
}

.description {
  line-height: 1.5em;
  padding: var(--mm-spacing) / 2;
}

.example {
  height: 0;
  overflow: hidden;
  padding: 0 !important;
  @include variables.pattern;
}

.example--is-expanded {
  height: auto;
  margin: 0 !important;
  overflow: initial;
  padding: var(--mm-spacing);
}

.body {
  margin: 0 var(--mm-spacing) var(--mm-spacing);
}

.properties {
  border: 1px solid darken(rgba(60, 88, 99, 0.1), 0);
  border-radius: 0 0 var(--mm-border-radius) var(--mm-border-radius);
  border-top: 0;
  padding-bottom: 1px;
}

@include variables.breakpoint('xxl') {
  .schema {
    display: grid;
    grid-template-areas:
      'schema-heading schema-example'
      'schema-body schema-example';
    grid-template-columns: 50% 50%;
    grid-template-rows: 90px auto;
  }

  .heading {
    grid-area: schema-heading;
  }

  .toggle-example {
    display: none;
  }

  .example {
    grid-area: schema-example;
    height: auto;
    margin: 0 !important;
    overflow: initial;
    padding-top: var(--mm-spacing);
  }

  .example-json {
    margin-bottom: 0;
    position: sticky;
    top: var(--page-header-height);
  }

  .body {
    grid-area: schema-body;
  }

  .properties {
    position: sticky;
    /* TODO: Ensure Schema properties stick if example json is tall */
    top: calc(var(--page-header-height) + var(--mm-spacing) + var(--mm-spacing));
  }
}
